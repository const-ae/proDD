% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculate_distance.R
\docType{methods}
\name{dist_approx}
\alias{dist_approx}
\alias{dist_approx,SummarizedExperiment-method}
\alias{dist_approx,MSnSet-method}
\title{Distance matrix computation respecting non-random missing values}
\usage{
dist_approx(X, params = NULL, by_sample = TRUE, blind = TRUE,
  mu_mis = NULL, var_mis = NULL)

\S4method{dist_approx}{SummarizedExperiment}(X, params = NULL,
  by_sample = TRUE, blind = TRUE, mu_mis = NULL, var_mis = NULL)

\S4method{dist_approx}{MSnSet}(X, params = NULL, by_sample = TRUE,
  blind = TRUE, mu_mis = NULL, var_mis = NULL)
}
\arguments{
\item{X}{the numerical data where each column is one sample and each row
is one protein. Missing values are coded as \code{NA}.}

\item{params}{an object of class `prodd_parameters` which for example is returned
by the \code{fit_parameters()} function.}

\item{by_sample}{boolean. Indicate if the distances between samples (columns) or
proteins (rows) is calculated. Default: TRUE.}

\item{blind}{boolean. If one provides the params argument infered by the
\code{find_parameters()} function, the feature parameters contain information
about the condition of each sample. This can be undesirable if one wants to
infer unsupervised sample similarities for quality control. This is the most
common use case for the \code{dist_approx()} function. Thus the function by default
removes condition information to give unbiased distance estimates by internally
transforming the params object using
\code{transform_parameters(params, rep(1, length(params$experimental_design)))}.
Default: TRUE.}

\item{mu_mis}{mean of the replacement values. Can be a single number, a
vector with one number for each sample or a matrix with the same dimensions
as X. Can be provided instead of the `params` parameters.}

\item{var_mis}{variance of the replacement values. Can be a single number, a
vector with one number for each sample or a matrix with the same dimensions
as X. Can be provided instead of the `params` parameters.}
}
\value{
a list with two elements:
  \describe{
    \item{mean}{a distance matrix with the mean of the distance estimate}
    \item{var}{the corresponding uncertainty to each distance estimate}
  }
}
\description{
The method calculates the distances between each samples or proteins of the matrix X and
returns a distance matrix and the corresponding uncertainty. Because of the missing
values no exact distance can be calculated instead realistic values for the missing
values are considered and the mean with the corresponding variance is
calculated for each distance.
}
\details{
Usually the method is called with the data matrix `X `and
the object that is returned by \code{fit_parameters()} or the result
obtained by first calling \code{transform_parameters()} to remove the group
information. The `params` object must be  of type `prodd_parameters`.

If particular information are available, where the missing values would have
been (ie. mean and variance for each missing value), they can instead of the
params object be provided in form of two matrices (with the same dimensions as X)
or individual values.

Unlike the \code{stats::dist} function which always calculates the distance
between the rows of the matrix and one transposes X to find the distances
between columns, this method uses the \code{by_sample} parameter. In `X` (and
correspondingly for `mu_mis` and `var_mis`)
the columns always correspond to the samples and the rows to the proteins. By default
the distances are calculated between the samples, to calculate the distances
between the proteins set \code{by_sample=FALSE}.
}
\section{Methods (by class)}{
\itemize{
\item \code{SummarizedExperiment}: S4 method of \code{dist_approx} for
\code{SummarizedExperiment}

\item \code{MSnSet}: S4 method of \code{dist_approx} for
\code{MSnSet}
}}

\seealso{
\code{\link[stats]{dist}}
}
